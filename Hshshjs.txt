import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { Alert, Button, CardActions, CardContent, Divider, TextField } from "@mui/material";
import RefreshIcon from "@mui/icons-material/Refresh";

const UserLogin = () => {
  const [formData, setFormData] = useState({
    username: "",
    password: "",
  });

  const [validationMessage, setValidationMessage] = useState("");
  const [valid, setValid] = useState(false);
  const [success, setSuccess] = useState(false);

  const [captcha, setCaptcha] = useState(generateRandomCaptcha());
  const [captchaInput, setCaptchaInput] = useState("");

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData((prevData) => ({ ...prevData, [name]: value }));
  };

  const navigate = useNavigate();

  const handleRegister = () => navigate("/register");

  const validateForm = () => {
    if (formData.username.trim() === "" || formData.password.trim() === "") {
      setValidationMessage("Please enter both username and password");
      return false;
    }

    return true;
  };

  const handleSubmit = async (e) => {
    e.preventDefault();

    let validationMsg = "";

    if (!validateForm()) {
      validationMsg = "Please enter both username and password";
    } else if (captchaInput !== captcha) {
      validationMsg = "Captcha validation failed. Please try again.";
      setValid(true);
      setSuccess(false);
    } else {
      try {
        const response = await axios.post("http://localhost:8080/login", formData);

        if (response.status === 200) {
          console.log("User Logged successfully");
          setSuccess(true);
          navigate("/home");
        } else {
          console.error("Failed to Login user");
          validationMsg = "Enter valid credentials";
          setSuccess(false);
        }
      } catch (error) {
        if (error.response && error.response.status === 401) {
          validationMsg = "Enter valid credentials";
        } else {
          console.error("Error during login:", error);
          validationMsg = "Unexpected error occurrence";
        }
        setSuccess(false);
      }
    }

    setTimeout(() => {
      setValidationMessage(validationMsg);
    }, 0);
  };

  const refreshString = () => {
    setCaptchaInput("");
    setCaptcha(generateRandomCaptcha());
  };

  return (
    <section className="bg-white dark:bg-gray-900 min-h-screen flex flex-col justify-center items-center">
      <div className="mx-auto text-left md:w-11/12 xl:w-9/12 md:text-left mb-8">
        <h1 className="text-4xl font-extrabold leading-none tracking-normal text-gray-900 md:text-6xl md:tracking-tight">
          <span className="block py-2 text-transparent bg-clip-text leading-12 bg-gradient-to-r from-blue-400 to-blue-500 lg:inline">
            PharmaEasy
          </span>
        </h1>
      </div>
      <div className="container px-6 py-12 mx-auto lg:flex lg:items-center lg:-mx-6">
        <div className="mt-8 lg:w-1/2 lg:mx-6">
          <div className="w-full px-8 py-10 overflow-hidden bg-white rounded-lg shadow-2xl dark:bg-gray-900 lg:max-w-xl shadow-gray-300/50 dark:shadow-black/50">
            <h1 className="text-lg font-medium text-gray-700">User Login</h1>
            <form className="mt-6">
              <div className="flex-1 mb-4">
                <label className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Username</label>
                <input
                  name="username"
                  type="text"
                  value={formData.username}
                  placeholder="Enter your Username"
                  onChange={handleChange}
                  className="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-orange-400 dark:focus:border-orange-400 focus:ring-orange-400 focus:outline-none focus:ring focus:ring-opacity-40"
                />
              </div>
              <div className="flex-1 mb-4">
                <label className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Password</label>
                <input
                  type="password"
                  name="password"
                  value={formData.password}
                  placeholder="Enter your password."
                  onChange={handleChange}
                  className="block w-full px-5 py-3 mt-2 text-gray-700 placeholder-gray-400 bg-white border border-gray-200 rounded-md dark:placeholder-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:border-gray-700 focus:border-orange-400 dark:focus:border-orange-400 focus:ring-orange-400 focus:outline-none focus:ring focus:ring-opacity-40"
                />
              </div>
              <React.Fragment>
                {success && <Alert className="block mb-2 text-sm text-gray-600 dark:text-gray-200">Successful</Alert>}
                <div className="card">
                  <Divider />
                  <CardContent>
                    <CardActions>
                      <div className="h3">{captcha}</div>
                      <Button startIcon={<RefreshIcon />} onClick={() => refreshString()}></Button>
                    </CardActions>
                    <label>Enter Captcha</label>
                    <TextField
                      value={captchaInput}
                      onChange={(e) => setCaptchaInput(e.target.value)}
                      className="block mb-2 text-sm text-gray-600 dark:text-gray-200 w-32" {/* Adjust the width as needed */}
                    />
                  </CardContent>
                </div>
              </React.Fragment>
              <button
                type="submit"
                className="w-full px-6 py-3 mt-6 text-sm font-medium tracking-wide text-white capitalize transition-colors duration-300 transform bg-orange-500 rounded-md hover:bg-orange-400 focus:outline-none focus:ring focus:ring-orange-300 focus:ring-opacity-50"
                onClick={handleSubmit}
              >
                Login
              </button>
            </form>
            {validationMessage && <p className="text-red-500">{validationMessage}</p>}
            {valid && <p className="text-red-500">Captcha validation failed. Please try again.</p>}
            {success && <p className="text-green-500">Login successful!</p>}
          </div>
        </div>
      </div>
    </section>
  );
};

export default UserLogin;

function generateRandomCaptcha() {
  return Math.random().toString(36).slice(8);
}

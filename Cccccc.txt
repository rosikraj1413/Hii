import React, { useState, useEffect } from "react";
import axios from "axios";

const ProductList = () => {
  const [products, setProducts] = useState([]);
  const [newProduct, setNewProduct] = useState({
    productid: 0,
    pname: "",
    manufacturedate: "",
    expirydate: "",
    price: 0,
    quantity: 0,
    stock: 0,
  });

  useEffect(() => {
    const fetchProducts = async () => {
      try {
        const response = await axios.post("http://localhost:8080/display");
        setProducts(response.data);
      } catch (error) {
        console.error("Error fetching products:", error);
      }
    };

    fetchProducts();
  }, []);

  const handleDelete = async (productId) => {
    try {
      await axios.post("http://localhost:8080/delete", { productid: productId });
      // Refresh the product list after deletion
      fetchProducts();
    } catch (error) {
      console.error("Error deleting product:", error);
    }
  };

  const handleUpdate = async () => {
    try {
      await axios.post("http://localhost:8080/update", newProduct);
      // Refresh the product list after update
      fetchProducts();
      // Clear the newProduct state
      setNewProduct({
        productid: 0,
        pname: "",
        manufacturedate: "",
        expirydate: "",
        price: 0,
        quantity: 0,
        stock: 0,
      });
    } catch (error) {
      console.error("Error updating product:", error);
    }
  };

  return (
    <div>
      <h1>Product List</h1>
      <ul>
        {products.map((product) => (
          <li key={product.productid}>
            <strong>{product.pname}</strong> - ${product.price}
            <button onClick={() => handleDelete(product.productid)}>Delete</button>
          </li>
        ))}
      </ul>

      <h2>Update Product</h2>
      <form>
        <label>
          Product ID:
          <input
            type="number"
            value={newProduct.productid}
            onChange={(e) => setNewProduct({ ...newProduct, productid: e.target.value })}
          />
        </label>
        <label>
          Product Name:
          <input
            type="text"
            value={newProduct.pname}
            onChange={(e) => setNewProduct({ ...newProduct, pname: e.target.value })}
          />
        </label>
        {/* Add similar input fields for other properties like manufacturedate, expirydate, etc. */}
        <button type="button" onClick={handleUpdate}>
          Update Product
        </button>
      </form>
    </div>
  );
};

export default ProductList;
